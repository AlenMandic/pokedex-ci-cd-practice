# When setting up the enviorment for our CI workflow, we need to make sure to run it on the exact same operating system as our live server(host) will be on, in this case let's say it's ubuntu 20.4.

# It is important to replicate the same environment in CI as in production as closely as possible, to avoid situations where the same code works differently in CI and production, which would effectively defeat the purpose of using CI.

# In this case, since our app runs using Node.JS and webpack, we need to setup a working enviroment below where can execute node scripts, beacuse we need to run testing and linting commands, and build out the project using webpack and a build command.

# We also have to start up and prepare the Node project on the virtual enviroment the CI runs in ( runs-on: ubuntu ), so we have to do npm install to ready the application for use/testing.

name: Deployment pipeline

on:
  # schedule:
  #  - cron: "0 18 * * *"
  push:
    branches:
      - main
  pull_request:
    branches: [main] # workflow will trigger when someone makes a pull request to the 'main' branch
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run eslint

      - name: Run Webpack build process
        run: npm run build

      - name: Send Discord workflow build notification failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Build proccess failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Run Jest tests for React components
        run: npm run test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start development server
        run: npm run start &
        env:
          CI: true

      - name: Wait for server to be ready
        run: npx wait-on http://localhost:8080

      - name: Run Playwright tests
        run: npx playwright test

      - name: Commit message
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.head_commit.message) }}
        run: echo "$COMMIT_MESSAGES"

      - name: Deploy app to Fly.io
        if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }} # only run when a pull request is merged onto the main branch, or directly to main. Don't deploy / version update anything that has #skip in commit msg.
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Send Discord workflow status notification cancellation
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
            severity: warn
            details: Workflow was Cancelled!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

#      - name: Check the deployed service URL  # Run a health check
#        uses: jtalk/url-health-check-action@v4
#        with:
#          url: https://pokedex-ci-cd-practice.fly.dev/
#          max-attempts: 3
#          retry-delay: 5s

  tag_release:
      needs: [simple_deployment_pipeline]  # depends on prior job finishing successfully first
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v4
        - name: Github context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }} # log more information to work with
          run: echo "$GITHUB_CONTEXT"
        
        - name: Commits
          env:
            COMMITS: ${{ toJson(github.event.commits) }} # log more information to work with
          run: echo "$COMMITS"

        - name: Commit message
          env:
            COMMIT_MESSAGES: ${{ toJson(github.event.head_commit.message) }} # log more information to work with
          run: echo "$COMMIT_MESSAGES"

        - name: Bump version and push tag
          if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }} # if skip is present in commit message, don't bump up version number
          uses: anothrNick/github-tag-action@a2c70ae13a881faf2b4953baaa9e49731997ab36
          env: 
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # ensures we are logged into github for authentication

        - name: Send Discord workflow status notification success
          uses: rjstone/discord-webhook-notify@v1
          if: success()
          with:
            severity: info
            details: App deployed and new version minor bumped!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
